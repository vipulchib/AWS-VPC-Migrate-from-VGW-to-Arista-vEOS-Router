AWSTemplateFormatVersion: '2010-09-09'
Description: Edge VPC, subnets, route tables, igw, sg, Linux VMs
Parameters: 
  ID:
    Description: VPC ID
    Type: String
    Default: 1
  VPCCidr: 
    Description: VPC Supernet
    Type: String
    Default: 10.1.0.0/16
  SubnetA2Cidr: 
    Description: VPC Subnet A-2
    Type: String
    Default: 10.1.11.0/24
  SubnetB2Cidr: 
    Description: VPC Subnet B-2
    Type: String
    Default: 10.1.21.0/24
Resources:
  EdgeVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      Tags:
        - Key: Name
          Value: !Sub
          - VPC-${ID}
          - {ID: !Ref ID}
  EdgeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Edge VPC Security Group
      GroupDescription: Allow SSH and VPC
      VpcId: !Ref 'EdgeVPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 35.182.194.13/32
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 31.220.70.36/32
        - IpProtocol: tcp
          FromPort: '9910'
          ToPort: '9910'
          CidrIp: 31.220.70.36/32
        - IpProtocol: -1
          CidrIp: 10.0.0.0/8
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.0.0/8
      Tags:
        - Key: Name
          Value: !Sub
          - vpc-${ID}-security-group
          - {ID: !Ref ID}
  EdgeVPCIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub
          - VPC-${ID}-IGW
          - {ID: !Ref ID}
  AttachGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'EdgeVPC'
      InternetGatewayId: !Ref 'EdgeVPCIGW'
  subnetA2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'EdgeVPC'
      CidrBlock: !Ref SubnetA2Cidr
      AvailabilityZone: ca-central-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref SubnetA2Cidr
  subnetA2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'EdgeVPC'
      Tags:
        - Key: Name
          Value: !Ref SubnetA2Cidr
  subnetA2RTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref subnetA2
      RouteTableId: !Ref subnetA2RT
  subnetB2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'EdgeVPC'
      CidrBlock: !Ref SubnetB2Cidr
      AvailabilityZone: ca-central-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref SubnetB2Cidr
  subnetB2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'EdgeVPC'
      Tags:
        - Key: Name
          Value: !Ref SubnetB2Cidr
  subnetB2RTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref subnetB2
      RouteTableId: !Ref subnetB2RT    
  publicRouteA2:
    Type: AWS::EC2::Route
    DependsOn: AttachGW
    Properties:
      RouteTableId: !Ref 'subnetA2RT'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'EdgeVPCIGW'
  publicRouteB2:
    Type: AWS::EC2::Route
    DependsOn: AttachGW
    Properties:
      RouteTableId: !Ref 'subnetB2RT'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'EdgeVPCIGW'  
  Ec2Instance2a:
    Type: AWS::EC2::Instance
    DependsOn: EdgeVPCIGW
    Properties:
      AvailabilityZone: ca-central-1a
      ImageId: ami-a954d1cd
      InstanceType: t2.micro
      KeyName: Arista-vEOS-Router
      UserData: 
        Fn::Base64: !Sub | 
          #!/bin/bash -xe 
          yum update -y 
          yum --enablerepo=epel install -y iperf iperf3
      NetworkInterfaces:
       - NetworkInterfaceId: !Ref VMIntf1a
         DeviceIndex: 0
      Tags:
        - Key: Name
          Value: !Sub
          - Host-${ID}a
          - {ID: !Ref ID}
  VMIntf1a:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: false
      SubnetId: !Ref 'subnetA2'
      GroupSet:
      - !Ref EdgeSecurityGroup
      PrivateIpAddress: !Sub
      - 10.${ID}.11.10 
      - {ID: !Ref ID}
      Tags:
        - Key: Name
          Value: !Sub
          - Host-${ID}a-ETH0
          - {ID: !Ref ID}
  Ec2Instance2b:
    Type: AWS::EC2::Instance
    DependsOn: EdgeVPCIGW
    Properties:
      AvailabilityZone: ca-central-1b
      ImageId: ami-a954d1cd
      InstanceType: t2.micro
      KeyName: Arista-vEOS-Router
      UserData: 
        Fn::Base64: !Sub | 
          #!/bin/bash -xe 
          yum update -y 
          yum --enablerepo=epel install -y iperf iperf3
      NetworkInterfaces:
       - NetworkInterfaceId: !Ref VMIntf1b
         DeviceIndex: 0
      Tags:
        - Key: Name
          Value: !Sub
          - Host-${ID}b
          - {ID: !Ref ID}
  VMIntf1b:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: false
      SubnetId: !Ref 'subnetB2'
      GroupSet:
      - !Ref EdgeSecurityGroup
      PrivateIpAddress: !Sub
      - 10.${ID}.21.10 
      - {ID: !Ref ID}
      Tags:
        - Key: Name
          Value: !Sub
          - Host-${ID}b-ETH0
          - {ID: !Ref ID}
  VMIntf1aEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  VMIntf1aEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt VMIntf1aEIP.AllocationId
      NetworkInterfaceId: !Ref VMIntf1a
  VMIntf1bEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  VMIntf1bEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt VMIntf1bEIP.AllocationId
      NetworkInterfaceId: !Ref VMIntf1b
  TransitvEOSRouterCustomerGateway: 
    Type: "AWS::EC2::CustomerGateway"
    Properties: 
      Type: ipsec.1
      BgpAsn: 65100
      IpAddress: 35.182.194.13
  VPC2VPNGateway: 
    Type: "AWS::EC2::VPNGateway"
    Properties:
      AmazonSideAsn: 65102
      Type: ipsec.1
      Tags: 
        - 
          Key: Use
          Value: VPC-2
  AttachVpnGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: VPC2VPNGateway
    Properties:
      VpcId: !Ref 'EdgeVPC'
      VpnGatewayId: !Ref VPC2VPNGateway
  MyVPNGatewayRouteProp: 
    Type: "AWS::EC2::VPNGatewayRoutePropagation"
    DependsOn: VPC2VPNGateway
    Properties:
      RouteTableIds: 
        - !Ref subnetA2RT
        - !Ref subnetB2RT
      VpnGatewayId: 
        !Ref VPC2VPNGateway
  TransitVPNConnection: 
    Type: "AWS::EC2::VPNConnection"
    DependsOn: TransitvEOSRouterCustomerGateway
    Properties: 
      Type: ipsec.1
      StaticRoutesOnly: false
      CustomerGatewayId: !Ref TransitvEOSRouterCustomerGateway
      VpnGatewayId: !Ref VPC2VPNGateway